group 'org.example'
version '1.0-SNAPSHOT'

subprojects {
    buildscript {
        ext {
            //统一配置服务器地址
            gradleConfigUrl = "http://123.60.101.254:7777/gradleConfig/"
            //如果怀疑服务器文件不是最新的，请检查gradle缓存目录中文件，例如C:\GCache\.tmp\resource
        }
        // 注意区分   apply plugin
        apply from: resources.text.fromInsecureUri(gradleConfigUrl + 'maven.gradle')
        apply from: resources.text.fromInsecureUri(gradleConfigUrl + 'versionConfig.gradle')
        // 仓库
        repositories {
            maven { url aliyunRepositoryUrl }
            maven { url springRepositoryUrl }
            mavenCentral()
        }
// 仓库
        repositories {
            maven { url 'https://maven.aliyun.com/repository/central' }
            maven { url 'https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin' }
            mavenLocal()
        }
// 依赖 此处仅 在构建的时候使用
        // 依赖 此处仅 在构建的时候使用
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
            //api文档生成插件
            classpath("com.github.shalousun:smart-doc-gradle-plugin:${smartDocGradlePluginVersion}")
        }
    }
    sourceCompatibility = '17'
    targetCompatibility = '17'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenLocal()
    }
    dependencies {
        implementation 'org.springframework:spring-core:4.0.2.RELEASE'
        implementation 'org.springframework:spring-context:4.0.2.RELEASE'
        implementation 'com.alibaba:dubbo:2.6.6'
        implementation 'io.netty:netty-all:4.1.32.Final'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }
}